---
import BlogItemList from "../../components/BlogItemList.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  //tag masuk ke url bagian akhir localhost/tags/astro allpost adalah props yang masuk

  const allPosts = Object.values(
    import.meta.glob("../posts/*.md", { eager: true })
  ); // MELOAD semua post

  const uniqueTags = [
    ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
  ];
  // return [
  //   { params: { tag: "astro" }, props: { posts: allPosts } },
  //   { params: { tag: "successes" }, props: { posts: allPosts } },
  //   { params: { tag: "community" }, props: { posts: allPosts } },
  //   { params: { tag: "blogging" }, props: { posts: allPosts } },
  //   { params: { tag: "setbacks" }, props: { posts: allPosts } },
  //   { params: { tag: "learning in public" }, props: { posts: allPosts } },
  // ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { posts } = Astro.props; // MENAMPUNG YANG DI ATAS KE VARIABEL INI

const { tag } = Astro.params;
// const filteredPosts = posts.filter(
//   (post: any) => post.frontmatter.tags?.includes(tag) //jika sama tags dengan yang ada di static path maka akan di tampilkan
// ); // memfilter post berdasarkan tag
---

<BaseLayout PageTitle={tag}>
  <p>Post dengan Tag: {tag}</p>
  <ul>
    {
      posts.map((post: any) => (
        <li>
          <BlogItemList url={post.url} title={post.frontmatter.title} />

        </li>
      ))
    }
  </ul>
</BaseLayout>
